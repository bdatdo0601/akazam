{"version":3,"sources":["../../src/db/index.js"],"names":["debug","require","initDB","uri","options","mgoose","mongoose","connect","err","Error"],"mappings":";;;;;;AAKA;;;;;;AALA;;;;;AAOA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,eAAjB,CAAd;AAEA;;;;;;;;;;AAQA,MAAMC,MAAM,GAAG,OAAOC,GAAP,EAAYC,OAAZ,KAAwB;AACnC,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMC,mBAASC,OAAT,CACjBJ,GADiB,EAEjBC,OAFiB,CAArB;AAIA,WAAOC,MAAP;AACH,GAND,CAME,OAAOG,GAAP,EAAY;AACVR,IAAAA,KAAK,CAACQ,GAAD,CAAL;AACA,UAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACH;AACJ,CAXD;;kBAae,OAAON,GAAP,EAAYC,OAAZ,KAAwB,MAAMF,MAAM,CAACC,GAAD,EAAMC,OAAN,C","sourcesContent":["/**\n * src/db.js\n * DATABASE INITIALIZATION\n * this will expose functionality of database to the project\n */\nimport mongoose from \"mongoose\";\n\nconst debug = require(\"debug\")(\"Akazam:DBMain\");\n\n/**\n * Database Initialization function\n *\n * return a mongoose instance that is connected to specified URI\n *\n * @param {*} uri MongoDB URI endpoint to connect to\n * @param {*} options MongoDB configuration\n */\nconst initDB = async (uri, options) => {\n    try {\n        const mgoose = await mongoose.connect(\n            uri,\n            options\n        );\n        return mgoose;\n    } catch (err) {\n        debug(err);\n        throw new Error(\"Unable to establish connection\");\n    }\n};\n\nexport default async (uri, options) => await initDB(uri, options);\n"],"file":"index.js"}